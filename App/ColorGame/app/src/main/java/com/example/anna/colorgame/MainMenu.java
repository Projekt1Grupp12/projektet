package com.example.anna.colorgame;import android.app.ProgressDialog;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;/*Class is an activity that shows main menu of the application.It has three TextView to show data. */public class MainMenu extends AppCompatActivity {    private static final String TAG = "debugMenu";    private Player player;    private Button chooseGameBtn;    private Class nextActivity = null;    private ConnectToServer runner;    private RecieveDataThread recieveDataThread;    private Thread thread;    private ProgressDialog pd;    private boolean start=false;    private AsyncResponse delegate = new AsyncResponse() {        @Override        public void postResult(String result) {            Log.d(TAG, "RESULTAT FRÃ…N SERVER " + result);        }};    @Override    protected void onCreate(Bundle savedInstanceState) {        Log.i(TAG, "onCreate(). MainMenu");        super.onCreate(savedInstanceState);        setContentView(R.layout.main_menu);        Intent intent = getIntent();        player = (Player)intent.getSerializableExtra("player");        recieveDataThread = new RecieveDataThread(this, player, this);//added thread 05-16        thread = new Thread(recieveDataThread);        thread.start();        //Text on the Button change depending on userID        chooseGameBtn = (Button) findViewById(R.id.choose_game_button);        if(player.getUserID().equals("0")){            chooseGameBtn.setText("Choose Game");        }else if(player.getUserID().equals("1")){            chooseGameBtn.setText("Join Game");            chooseGameBtn.setEnabled(false);        }    }    @Override    protected void onStop(){        Log.d(TAG, "onStop() ");        recieveDataThread.setIsRunning(false);        thread.interrupt();        super.onStop();    }    /**     * This method is called when button "Choose Game" is clicked.     * It starts next activity and sends data to it using Intent class.     * @param view     */    public void chooseGame(View view){        Log.d(TAG, "Button Choose Game or Join Game is clicked");        Intent intent = null;        if (player.getUserID().equals("0")) {            intent = new Intent(this, ChooseGame.class);            intent.putExtra("player", player);            startActivity(intent);        }        if (player.getUserID().equals("1")) {            startAsyncTask("ready;1");//sending message to server            startProgressDialog("Starting...");        }        if (player == null) {            Log.d(TAG, "Player null");        }    }    private void startProgressDialog(String message){        pd = new ProgressDialog(MainMenu.this);        pd.setCanceledOnTouchOutside(false);        pd.setProgressStyle(pd.STYLE_SPINNER);        pd.setMessage(message);        pd.show();    }    public void startGame() {        Intent intent = null;        pd.dismiss();//when start=true, start next activity        intent = new Intent(this, nextActivity);        intent.putExtra("player", player);        startActivity(intent);    }    public void setButtonActive(){ this.chooseGameBtn.setEnabled(true);}//is used in a while loop    public void setNextActivityGame(String str) {        if (str.contains(("PuzzleGame"))) {//if server sends PuzzleGame start PuzzleGame            nextActivity = PuzzleGame.class;        } else if (str.contains(("TrafficGame"))) {            nextActivity = TrafficGame.class;        } else if (str.contains(("DuelGame"))) {            nextActivity = DuelGame.class;        }    }    public void showHighScore(View view) {}    public void startAsyncTask(String message) {        runner = new ConnectToServer(player.getChoosenIP(), delegate);        Log.d(TAG, "Task created");        runner.execute(message);    }    @Override    public void onBackPressed() {        String message = "logout" + ";" + player.getUserID();        ConnectToServer connectToServer = new ConnectToServer(player);        Log.d(TAG, "connectToServer is created " + player.getName());        System.gc();        connectToServer.execute(message);    }}